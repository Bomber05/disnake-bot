import disnake
import random
from disnake.ext import commands
import sqlite3

user_levels = {}

bot = commands.Bot(command_prefix='!', intents=disnake.Intents.all())

forbidden_words = ['–ª–æ—Ö', '–¥—É—Ä–∞–∫', '–∫–∞–∫–∞—à–∫–∞', '—Ç—É–ø–æ–π']#–∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ—Ç –≤—ã–¥–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ç–∏–º —Å–ª–æ–≤–æ–º
#–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏
connection = sqlite3.connect('warnings.db')
cursor = connection.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS warnings (
                    user_id INTEGER PRIMARY KEY,
                    username TEXT,
                    warnings INTEGER
                )''')
connection.commit()

#–±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –º–æ–Ω–µ—Ç–∞–º–∏
connect = sqlite3.connect('coins.db')
curso = connect.cursor()

curso.execute('''CREATE TABLE IF NOT EXISTS coins (
                    user_id INTEGER PRIMARY KEY,
                    coins INTEGER
                )''')
connect.commit()
# –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ª–≤–ª–∞–º–∏
conne = sqlite3.connect('levels.db')
curs = conne.cursor()

curs.execute('''CREATE TABLE IF NOT EXISTS levels (
                    user_id INTEGER PRIMARY KEY,
                    level INTEGER
                )''')
conne.commit()

#—Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –≤—ã–¥–∞–µ—Ç —Ä–æ–ª –¥–ª—è –æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
@bot.event
async def on_raw_reaction_add(payload):
    if payload.channel_id == 1225495581590421565 and payload.message_id == 1225496162811777074:
        guild = bot.get_guild(payload.guild_id)
        member = guild.get_member(payload.user_id)
        role = guild.get_role(1225497401079500800)

        if member and role:
            await member.add_roles(role)
            print(
                f"–í—ã–¥–∞–Ω–∞ —Ä–æ–ª—å {role.name} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.display_name}"
            )
        else:
            print(
                "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ —Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
            )

#–æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ —Ç–æ–º —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –Ω–∏–∫ –±–æ—Ç–∞
@bot.event
async def on_ready():
    print('–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ')
    print(f'–ó–∞–ø—É—â–µ–Ω –∫–∞–∫: {bot.user}')


@bot.command()
async def hello(ctx):
    await ctx.send(
        '–ü—Ä–∏–≤–µ—Ç! –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —ç—Ç–æ –Ω–µ –º–∞—Ç–µ—Ä–∏—Ç—Å—è!'
    )

#—Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
@bot.command()
async def userinfo(ctx, member: disnake.Member = None):
    member = member or ctx.author

    embed = disnake.Embed(
        title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:", color=0x800080
    )
    embed.set_thumbnail(url=member.avatar.url)
    embed.add_field(
        name="–ù–∏–∫–Ω–µ–π–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:", value=member.display_name
    )
    embed.add_field(
        name="–î–∏—Å–∫–æ—Ä–¥ –Ω–∏–∫–Ω–µ–π–º:", value=str(member)
    )
    embed.add_field(
        name="–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:", value=member.created_at.strftime("%d-%m-%Y %H:%M:%S")
    )
    embed.add_field(
        name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", value=member.joined_at.strftime("%d-%m-%Y %H:%M:%S")
    )

    await (ctx.send
           (embed=embed)
           )

#—Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª—è—é—â–∞—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.command()
async def clear(ctx, amount: int):
    await ctx.channel.purge(limit=amount + 1)
    await ctx.send(
        f'–£–¥–∞–ª–µ–Ω–æ {amount} —Å–æ–æ–±—â–µ–Ω–∏–π', delete_after=5
    )

#–∏–≥—Ä–∞ –∫–æ—Å—Ç–∏ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é –≤—ã–¥–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6
@bot.command()
async def kub(ctx):
    message = await ctx.send(
        "–ù–ê–ñ–ú–ò–¢–ï –ß–¢–û–ë–´ –ò–ì–†–ê–¢–¨"
    )
    await message.add_reaction(
        "üé≤"
    )

    def check(reaction, user):
        return user == ctx.author and str(reaction.emoji) == "üé≤"

    try:
        await bot.wait_for(
            'reaction_add', timeout=30.0, check=check
        )
        await ctx.send(
            f"{ctx.author.mention} –±—Ä–æ—Å–∞–µ—Ç –∫—É–± –∏ –≤—ã–ø–∞–¥–∞–µ—Ç {random.randint(1, 6)}"
        )
    except TimeoutError:
        await ctx.send(
            "–í—Ä–µ–º—è –≤—ã—à–ª–æ, –∫—É–±–∏–∫ –Ω–µ –±—ã–ª –±—Ä–æ—à–µ–Ω."
        )

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–∏—Å–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    if any(word in message.content.lower() for word in forbidden_words):
        await message.delete()
        channel = bot.get_channel(1225509370226413568)
        await channel.send(
            f'{message.author.mention} —É–ø–æ—Ç—Ä–µ–±–∏–ª –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Å–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏: "{message.content}"'
        )

        await message.channel.send(
            f'{message.author.mention} –Ω–µ —Ä—É–≥–∞–π—Å—è!'
        )

        cursor.execute('''INSERT OR IGNORE INTO warnings (user_id, username, warnings) VALUES (?, ?, ?)''',
                       (message.author.id, str(message.author), 0))
        cursor.execute(
            '''UPDATE warnings SET warnings = warnings + 1 WHERE user_id = ?''', (message.author.id,)
        )
        connection.commit()

    await bot.process_commands(message)

#–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–º —Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø–æ–ª—É—á–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
@bot.command()
async def mat(ctx, member: disnake.Member = None):
    member = member or ctx.author

    cursor.execute(
        '''SELECT username, warnings FROM warnings WHERE user_id = ?''', (member.id,)
    )
    result = cursor.fetchone()

    if result:
        username, warnings = result
        embed = disnake.Embed(
            title=f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π —É {member.display_name}: {warnings}", color=0x800080
        )
        await ctx.send(embed=embed)
    else:
        await ctx.send("–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π.")
#–ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–¥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–µ–∞–µ—Ç –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.command()
async def mute(ctx, member: disnake.Member, *, reason=""):
    role = ctx.guild.get_role(1225504947836158002)
    if role is None:
        await ctx.send(
            "–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        )
        return

    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return

    if role in member.roles:
        await ctx.send(
            f"{member.mention} —É–∂–µ –∑–∞–º—å—é—á–µ–Ω."
        )
        return

    await member.add_roles(
        role, reason=reason
    )
    await ctx.send(
        f"{member.mention} –ø–æ–ª—É—á–∏–ª –º—É—Ç –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}"
    )

#–∑–∞–±–∏—Ä–∞—é—Ç —ç—Ç—É —Ä–æ–ª—å
@bot.command()
async def unmute(ctx, member: disnake.Member):
    role = ctx.guild.get_role(1225504947836158002)
    if role is None:
        await ctx.send(
            "–†–æ–ª—å –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞."
        )
        return

    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return

    if role not in member.roles:
        await ctx.send(
            "–û–Ω –∏ —Ç–∞–∫ –Ω–µ –∑–∞–º—å—é—á–µ–Ω."
        )
        return

    await member.remove_roles(role)
    await ctx.send(
        f"{member.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç —Å–Ω–æ–≤–∞ –≥–æ–≤–æ—Ä–∏—Ç—å!"
    )

#–±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.command()
async def avatar(ctx, member: disnake.Member = None):
    user = ctx.message.author if member is None else member
    if user.avatar:
        embed = disnake.Embed(
            title=f'–ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user}', color=0x800080
        )
        embed.set_image(
            url=user.avatar.url
        )
        await ctx.send(
            embed=embed
        )
    else:
        await ctx.send(
            "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –∞–≤–∞—Ç–∞—Ä–∫–∏."
        )

#–≤—ã–¥–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
@bot.command()
async def vor(ctx, member: disnake.Member):
    cursor.execute('''INSERT OR IGNORE INTO warnings (user_id, username, warnings) VALUES (?, ?, ?)''',
                   (member.id, str(member), 0))
    cursor.execute(
        '''UPDATE warnings SET warnings = warnings + 1 WHERE user_id = ?''', (member.id,)
    )
    connection.commit()

    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return

    await ctx.send(
        f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø–æ–ª—É—á–∏–ª –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.'
    )

#–æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –º–æ–¥–µ—Ä–æ–≤
@bot.command()
async def ticket(ctx, *, text: str):
    embed = disnake.Embed(title="Ticket", description=text, color=0x800080)

    role_mention = ctx.guild.get_role(1229740170975252551).mention

    embed.set_footer(
        text=f"—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {ctx.author.display_name}"
    )

    channel = bot.get_channel(1225509370226413568)
    await channel.send(role_mention, embed=embed)

    await ctx.message.delete()

#–≤—ã–≥–æ–Ω—è–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Å–µ—Ä–≤–µ—Ä–∞
@bot.command()
async def kick(ctx, member: disnake.Member, *, reason: str = "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"):
    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return
    moderator = ctx.author.display_name
    await member.kick(reason=reason)
    await ctx.send(
        f"{member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç."
    )

    kick_channel = bot.get_channel(1225509370226413568)
    await kick_channel.send(
        f"{member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: {reason}. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderator}"
    )

#–±–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.command()
async def ban(ctx, member: disnake.Member, *, reason=""):
    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return

    await member.ban(reason=reason)
    await ctx.send(
        f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω."
    )

    moderator = ctx.author.display_name

    channel = bot.get_channel(1225509370226413568)
    await channel.send(
        f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderator}"
    )

#—Ä–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.command()
async def unban(ctx, member: disnake.User):
    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return

    await ctx.guild.unban(member)
    await ctx.send(
        f"{member.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω."
    )

    moderator = ctx.author.display_name

    channel = bot.get_channel(1225509370226413568)
    await channel.send(
        f"{member.mention} –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {moderator}"
    )

#–≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É –∫–æ–≥–æ —Å–∫–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π
@bot.command()
async def lidermat(ctx):
    cursor.execute('''SELECT username, warnings FROM warnings ORDER BY warnings DESC LIMIT 10''')
    user_warnings = cursor.fetchall()

    embed = disnake.Embed(title="–¢–æ–ø 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:", color=0x800080)

    for username, warnings in user_warnings:
        embed.add_field(name=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}", value=f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: {warnings}", inline=False)

    await ctx.send(embed=embed)

#–æ—á–∏—â–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏
@bot.command()
async def clearlid(ctx):
    if ctx.author.top_role.id != 1229740170975252551:
        await ctx.send(
            "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤."
        )
        return
    cursor.execute(
        '''DELETE FROM warnings'''
    )
    connection.commit()
    await ctx.send(
        "–°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –æ—á–∏—â–µ–Ω."
    )

#–∏–≥—Ä–∞ –∫–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü–∞ –±—É–º–∞–≥–∞ —Å –±–æ—Ç–æ–º
@bot.command()
async def igra(ctx, choice: str):
    choices = ['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞']
    emojis = {'–∫–∞–º–µ–Ω—å': 'ü™®', '–Ω–æ–∂–Ω–∏—Ü—ã': '‚úÇÔ∏è', '–±—É–º–∞–≥–∞': 'üìÉ'}

    if choice.lower() not in choices:
        await ctx.send(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∏–∑: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞."
        )
        return

    bot_choice = random.choice(choices)

    if choice.lower() == bot_choice:
        result = "–ù–∏—á—å—è!"
    elif (choice.lower() == '–∫–∞–º–µ–Ω—å' and bot_choice == '–Ω–æ–∂–Ω–∏—Ü—ã') or \
            (choice.lower() == '–Ω–æ–∂–Ω–∏—Ü—ã' and bot_choice == '–±—É–º–∞–≥–∞') or \
            (choice.lower() == '–±—É–º–∞–≥–∞' and bot_choice == '–∫–∞–º–µ–Ω—å'):
        result = "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –ø–æ–±–µ–¥–∏–ª–∏!"
    else:
        result = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏."

    user_emoji = emojis[choice.lower()]
    bot_emoji = emojis[bot_choice]

    embed = disnake.Embed(
        title="–ò–≥—Ä–∞ –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥—É!", color=0x800080
    )
    embed.add_field(
        name="–í–∞—à –≤—ã–±–æ—Ä:", value=f"{choice.capitalize()} {user_emoji}", inline=False
    )
    embed.add_field(
        name="–í—ã–±–æ—Ä –±–æ—Ç–∞:", value=f"{bot_choice.capitalize()} {bot_emoji}", inline=False
    )
    embed.add_field(
        name="–†–µ–∑—É–ª—å—Ç–∞—Ç:", value=result, inline=False
    )

    await ctx.send(embed=embed)

#–ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç —É–¥–∞–ª—è–µ—Ç —Ç–≤–æ–µ —Å–æ–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã–¥–∞–µ—Ç –µ–≥–æ –∑–∞ —Å–≤–æ–µ
@bot.command()
async def anonim(ctx, *, text):
    await ctx.message.delete()
    await ctx.send(text)

#–ø–µ—Ä–µ–≤–µ—Å—Ç –¥–µ–Ω—å–≥–∏ —Å —Å–≤–æ–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
@bot.command()
async def pay(ctx, amount: int, member: disnake.Member):
    user_id = ctx.author.id

    recipient_id = member.id

    if amount <= 0:
        await ctx.send(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç."
        )
        return

    curso.execute(
        '''SELECT coins FROM coins WHERE user_id = ?''', (user_id,)
    )
    sender_coins = curso.fetchone()[0]
    if sender_coins < amount:
        await ctx.send(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        )
        return

    curso.execute(
        '''UPDATE coins SET coins = coins - ? WHERE user_id = ?''', (amount, user_id)
    )

    curso.execute(
        '''INSERT OR IGNORE INTO coins (user_id, coins) VALUES (?, ?)''', (recipient_id, 0)
    )

    curso.execute(
        '''UPDATE coins SET coins = coins + ? WHERE user_id = ?''', (amount, recipient_id)
    )

    connect.commit()

    await ctx.send(
        f'–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–≤–µ–ª–∏ {amount} –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}.'
    )

#–∑–∞–±–∏—Ä–∞–µ—Ç —É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç —Å –µ–≥–æ –±–∞–ª–∞–Ω—Å–∞
@bot.command()
@commands.has_permissions(administrator=True)
async def min(ctx, amount: int, member: disnake.Member):
    if amount <= 0:
        await ctx.send(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç."
        )
        return

    curso.execute(
        '''SELECT coins FROM coins WHERE user_id = ?''', (member.id,)
    )
    result = curso.fetchone()

    if not result or result[0] < amount:
        await ctx.send(
            "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç –¥–ª—è —Å–ø–∏—Å–∞–Ω–∏—è."
        )
        return

    curso.execute(
        '''UPDATE coins SET coins = coins - ? WHERE user_id = ?''', (amount, member.id)
    )
    connect.commit()

    await ctx.send(
        f"–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention} —Å–ø–∏—Å–∞–Ω–æ {amount} –º–æ–Ω–µ—Ç!"
    )

#—Ç–æ–ø 10 –ª–∏–¥–µ—Ä–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –º–æ–Ω–µ—Ç
@bot.command()
async def leadercoin(ctx):
    curso.execute(
        '''SELECT user_id, coins FROM coins ORDER BY coins DESC LIMIT 10'''
    )
    leaders = curso.fetchall()

    embed = disnake.Embed(
        title="–¢–æ–ø 10 —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", color=0x800080
    )

    for user_id, coins in leaders:
        member = ctx.guild.get_member(user_id)
        if member:
            embed.add_field(name=member.display_name, value=f"{coins} –º–æ–Ω–µ—Ç", inline=False)

    await ctx.send(embed=embed)

#–≤—ã–¥–∞–µ—Ç –º–æ–Ω–µ—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏–≥–¥–µ –Ω–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å –≤—ã–¥–∞–µ—Ç —Å –≤–æ–∑–¥—É—Ö–∞
@bot.command()
@commands.has_permissions(administrator=True)
async def payplus(ctx, member: disnake.Member, amount: int):
    if amount <= 0:
        await ctx.send(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç."
        )
        return

    curso.execute('''INSERT OR IGNORE INTO coins (user_id, coins) VALUES (?, ?)''',
                   (member.id, 0))
    curso.execute(
        '''UPDATE coins SET coins = coins + ? WHERE user_id = ?''', (amount, member.id)
    )
    connect.commit()

    await ctx.send(
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member.mention} –ø–æ–ª—É—á–∏–ª {amount} –º–æ–Ω–µ—Ç!"
    )

#–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É
@bot.command()
async def money(ctx):
    user_id = ctx.author.id

    curso.execute(
        '''SELECT coins FROM coins WHERE user_id = ?''', (user_id,)
    )
    result = curso.fetchone()

    if result is None:
        curso.execute(
            '''INSERT INTO coins (user_id, coins) VALUES (?, ?)''', (user_id, 0)
        )
        connect.commit()
        coins = 0
    else:
        coins = result[0]

    await ctx.send(
        f'–£ –≤–∞—Å {coins} –º–æ–Ω–µ—Ç.'
    )

#—Å–∏—Å—Ç–µ–º–∞ –ª–≤–ª–æ–≤
#–∫–∞–∂–¥—ã–µ 15 —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç 1 —É—Ä–æ–≤–µ–Ω—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
class UserLevel:
    def __init__(self, user_id):
        self.user_id = user_id
        self.message_count = 0
        self.level = 0

    async def track_messages(self, ctx):
        self.message_count += 1
        if self.message_count % 15 == 0:
            self.level += 1
            curs.execute('''INSERT OR REPLACE INTO levels (user_id, level) VALUES (?, ?)''',
                           (self.user_id, self.level))
            conne.commit()
            await ctx.send(f"–í–∞—à —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–µ–Ω! –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {self.level}")


@bot.event
async def on_messagee(message):
    if message.author.bot:
        return

    user_id = message.author.id
    if user_id not in user_levels:
        user_levels[user_id] = UserLevel(user_id)

    user_level = user_levels[user_id]

    curs.execute('''SELECT level FROM levels WHERE user_id = ?''', (user_id,))
    result = curs.fetchone()
    if result:
        user_level.level = result[0]

    await user_level.track_messages(message.channel)
    await bot.process_commands(message)


#–≤—ã–¥–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.command()
async def userlvl(ctx):
    user_id = ctx.author.id
    if user_id in user_levels:
        user_level = user_levels[user_id]
        await ctx.send(f"–í–∞—à —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å: {user_level.level}")
    else:
        await ctx.send("–í—ã –µ—â–µ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —É—Ä–æ–≤–µ–Ω—å!")

#—Ç–æ–ø 10 –ª–∏–¥–µ—Ä–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é
@bot.command()
async def lvlrecord(ctx):
    curs.execute('''SELECT user_id, level FROM levels ORDER BY level DESC LIMIT 3''')
    records = curs.fetchall()

    if not records:
        await ctx.send("–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —É—Ä–æ–≤–Ω—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return

    embed = disnake.Embed(title="–¢–æ–ø 3 –ª–∏–¥–µ—Ä–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é:", color=0x800080)

    for index, (user_id, level) in enumerate(records, start=1):
        member = ctx.guild.get_member(user_id)
        username = member.display_name if member else f"User ID: {user_id}"
        embed.add_field(name=f"{index}. {username}", value=f"–£—Ä–æ–≤–µ–Ω—å: {level}", inline=False)

    await ctx.send(embed=embed)

bot.run('—Ç–æ–∫–µ–Ω')

connection.close()
connect.close()
conne.close()
